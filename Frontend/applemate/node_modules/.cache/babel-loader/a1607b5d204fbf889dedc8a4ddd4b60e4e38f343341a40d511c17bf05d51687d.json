{"ast":null,"code":"var _jsxFileName = \"E:\\\\Apple_Mate(project)\\\\Frontend\\\\applemate\\\\src\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Auth provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check auth status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Function to check if user is authenticated\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      const storedUserType = localStorage.getItem('userType');\n      if (token && storedUserType) {\n        setUserType(storedUserType);\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n        setUserType(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setIsAuthenticated(false);\n      setUserType(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  // Login function\n  const login = (token, role, username) => {\n    try {\n      // Set token and username\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('username', username);\n\n      // Determine user type from role\n      let userType;\n      switch (role) {\n        case 'user':\n          userType = 'retail_seller';\n          break;\n        case 'admin':\n          userType = 'admin';\n          break;\n        case 'wholesale':\n        case 'wholesale_dealer':\n          userType = 'wholesale';\n          break;\n        default:\n          userType = 'user';\n      }\n\n      // Set role and user type\n      localStorage.setItem('role', role);\n      localStorage.setItem('userType', userType);\n      setUserType(userType);\n      setIsAuthenticated(true);\n\n      // Redirect based on user type\n      if (userType === 'admin') {\n        window.location.href = '/admin/dashboard';\n      } else if (userType === 'retail_seller') {\n        window.location.href = '/retail/profile';\n      } else if (userType === 'wholesale') {\n        window.location.href = '/Wsprofile';\n      } else {\n        window.location.href = '/profile'; // default case\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  // Context value\n  const value = {\n    isAuthenticated,\n    userType,\n    loading,\n    login,\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"A2TioywDHutq1sQdtUrIrJfJaYU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userType","setUserType","loading","setLoading","checkAuthStatus","token","localStorage","getItem","storedUserType","error","console","login","role","username","setItem","window","location","href","value","logout","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Apple_Mate(project)/Frontend/applemate/src/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Create the authentication context\r\nconst AuthContext = createContext(null);\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userType, setUserType] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check auth status on component mount\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Function to check if user is authenticated\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const storedUserType = localStorage.getItem('userType');\r\n\r\n      if (token && storedUserType) {\r\n        setUserType(storedUserType);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n        setUserType(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      setIsAuthenticated(false);\r\n      setUserType(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login function\r\n // Login function\r\nconst login = (token, role, username) => {\r\n  try {\r\n    // Set token and username\r\n    localStorage.setItem('authToken', token);\r\n    localStorage.setItem('username', username);\r\n\r\n    // Determine user type from role\r\n    let userType;\r\n    switch (role) {\r\n      case 'user':\r\n        userType = 'retail_seller';\r\n        break;\r\n      case 'admin':\r\n        userType = 'admin';\r\n        break;\r\n      case 'wholesale':\r\n      case 'wholesale_dealer':\r\n        userType = 'wholesale';\r\n        break;\r\n      default:\r\n        userType = 'user';\r\n    }\r\n\r\n    // Set role and user type\r\n    localStorage.setItem('role', role);\r\n    localStorage.setItem('userType', userType);\r\n    setUserType(userType);\r\n    setIsAuthenticated(true);\r\n\r\n    // Redirect based on user type\r\n    if (userType === 'admin') {\r\n      window.location.href = '/admin/dashboard';\r\n    } else if (userType === 'retail_seller') {\r\n      window.location.href = '/retail/profile';\r\n    } else if (userType === 'wholesale') {\r\n      window.location.href = '/Wsprofile';\r\n    } else {\r\n      window.location.href = '/profile'; // default case\r\n    }\r\n  } catch (error) {\r\n    console.error('Login failed:', error);\r\n  }\r\n};\r\n\r\n  // Context value\r\n  const value = {\r\n    isAuthenticated,\r\n    userType,\r\n    loading,\r\n    login,\r\n    logout,\r\n    checkAuthStatus,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}