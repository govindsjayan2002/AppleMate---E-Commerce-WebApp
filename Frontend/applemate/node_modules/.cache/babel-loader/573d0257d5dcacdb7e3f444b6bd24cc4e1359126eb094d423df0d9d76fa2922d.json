{"ast":null,"code":"var _jsxFileName = \"E:\\\\Apple_Mate(project)\\\\Frontend\\\\applemate\\\\src\\\\AuthenticationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Auth provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check auth status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Function to check if user is authenticated\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      const storedUserType = localStorage.getItem('userType');\n      const storedRole = localStorage.getItem('role');\n      console.log('Auth Check - Token:', token);\n      console.log('Auth Check - Stored User Type:', storedUserType);\n      console.log('Auth Check - Stored Role:', storedRole);\n      if (token && storedUserType) {\n        setUserType(storedUserType);\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n        setUserType(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      setIsAuthenticated(false);\n      setUserType(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function with comprehensive role mapping\n  const login = (token, role, username) => {\n    try {\n      console.log('Login Called - Received Role:', role);\n\n      // Comprehensive user type mapping\n      const userTypeMap = {\n        'user': 'retail_seller',\n        'retail_seller': 'retail_seller',\n        'wholesale': 'wholesale',\n        'wholesale_dealer': 'wholesale',\n        'admin': 'admin'\n      };\n\n      // Determine user type, with a fallback to 'retail_seller'\n      const userType = userTypeMap[role.toLowerCase()] || 'retail_seller';\n      console.log('Mapped User Type:', userType);\n\n      // Set all necessary local storage items\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('role', role);\n      localStorage.setItem('userype', userType);\n\n      // Update state\n      setUserType(userType);\n      setIsAuthenticated(true);\n\n      // Routing logic\n      switch (userType) {\n        case 'admin':\n          window.location.href = '/admin/dashboard';\n          break;\n        case 'wholesale':\n          window.location.href = '/Ws_profile';\n          break;\n        case 'retail_seller':\n        default:\n          window.location.href = '/profile';\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    try {\n      // Clear local storage\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userType');\n      localStorage.removeItem('role');\n      localStorage.removeItem('username');\n\n      // Update state\n      setIsAuthenticated(false);\n      setUserType(null);\n      return true;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      return false;\n    }\n  };\n\n  // Context value\n  const value = {\n    isAuthenticated,\n    userType,\n    loading,\n    login,\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"A2TioywDHutq1sQdtUrIrJfJaYU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userType","setUserType","loading","setLoading","checkAuthStatus","token","localStorage","getItem","storedUserType","storedRole","console","log","error","login","role","username","userTypeMap","toLowerCase","setItem","window","location","href","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Apple_Mate(project)/Frontend/applemate/src/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Create the authentication context\r\nconst AuthContext = createContext(null);\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userType, setUserType] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check auth status on component mount\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Function to check if user is authenticated\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      const storedUserType = localStorage.getItem('userType');\r\n      const storedRole = localStorage.getItem('role');\r\n\r\n      console.log('Auth Check - Token:', token);\r\n      console.log('Auth Check - Stored User Type:', storedUserType);\r\n      console.log('Auth Check - Stored Role:', storedRole);\r\n\r\n      if (token && storedUserType) {\r\n        setUserType(storedUserType);\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n        setUserType(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      setIsAuthenticated(false);\r\n      setUserType(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login function with comprehensive role mapping\r\n  const login = (token, role, username) => {\r\n    try {\r\n      console.log('Login Called - Received Role:', role);\r\n\r\n      // Comprehensive user type mapping\r\n      const userTypeMap = {\r\n        'user': 'retail_seller',\r\n        'retail_seller': 'retail_seller',\r\n        'wholesale': 'wholesale',\r\n        'wholesale_dealer': 'wholesale',\r\n        'admin': 'admin'\r\n      };\r\n\r\n      // Determine user type, with a fallback to 'retail_seller'\r\n      const userType = userTypeMap[role.toLowerCase()] || 'retail_seller';\r\n\r\n      console.log('Mapped User Type:', userType);\r\n\r\n      // Set all necessary local storage items\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('role', role);\r\n      localStorage.setItem('userype', userType);\r\n\r\n      // Update state\r\n      setUserType(userType);\r\n      setIsAuthenticated(true);\r\n\r\n      // Routing logic\r\n      switch(userType) {\r\n        case 'admin':\r\n          window.location.href = '/admin/dashboard';\r\n          break;\r\n        case 'wholesale':\r\n          window.location.href = '/Ws_profile';\r\n          break;\r\n        case 'retail_seller':\r\n        default:\r\n          window.location.href = '/profile';\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    try {\r\n      // Clear local storage\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('userType');\r\n      localStorage.removeItem('role');\r\n      localStorage.removeItem('username');\r\n      \r\n      // Update state\r\n      setIsAuthenticated(false);\r\n      setUserType(null);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    isAuthenticated,\r\n    userType,\r\n    loading,\r\n    login,\r\n    logout,\r\n    checkAuthStatus,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}