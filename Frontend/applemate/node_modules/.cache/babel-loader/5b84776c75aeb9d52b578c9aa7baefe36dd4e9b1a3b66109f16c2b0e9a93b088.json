{"ast":null,"code":"var _jsxFileName = \"E:\\\\Apple_Mate(project)\\\\Frontend\\\\applemate\\\\src\\\\pages\\\\Products_page\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../AuthenticationContext\";\nimport \"./products.css\";\nimport Navbar from \"../../components/Navbar\";\n\n// Use a consistent variable for the localStorage key\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CART_STORAGE_KEY = 'cart';\nfunction Products() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [cart, setCart] = useState(() => {\n    // Initialize cart from localStorage\n    const savedCart = localStorage.getItem(CART_STORAGE_KEY);\n    try {\n      return savedCart ? JSON.parse(savedCart) : [];\n    } catch (error) {\n      console.error(\"Error parsing cart data:\", error);\n      return [];\n    }\n  });\n  const {\n    isAuthenticated,\n    userType\n  } = useAuth();\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    const currentCart = JSON.stringify(cart);\n    localStorage.setItem(CART_STORAGE_KEY, currentCart);\n    console.log(\"Cart saved to localStorage in Products.js:\", currentCart);\n\n    // Dispatch storage event to notify other components\n    window.dispatchEvent(new Event('storage'));\n  }, [cart]);\n\n  // Fetch products from the Django backend\n  useEffect(() => {\n    fetch(\"/api/products/\", {\n      headers: {\n        'Authorization': isAuthenticated ? `Token ${localStorage.getItem('authToken')}` : ''\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      const productList = Array.isArray(data) ? data : data.products || [];\n      setProducts(productList);\n    }).catch(error => console.error(\"Error fetching products:\", error));\n  }, [isAuthenticated]);\n\n  // Function to get the correct price based on user type\n  const getDisplayPrice = product => {\n    if (isAuthenticated && (userType === \"retail_seller\" || userType === \"retail\") && product.retail_price) {\n      return product.retail_price;\n    }\n    if (isAuthenticated && (userType === \"wholesale_dealer\" || userType === \"wholesale\") && product.wholesale_price) {\n      return product.wholesale_price;\n    }\n    return product.normal_price;\n  };\n\n  // Function to check if user can add to cart\n  const canAddToCart = () => {\n    return isAuthenticated && (userType === \"retail_seller\" || userType === \"retail\" || userType === \"wholesale_dealer\" || userType === \"wholesale\");\n  };\n\n  // State to track current product quantities\n  const [productQuantities, setProductQuantities] = useState({});\n\n  // Function to update product quantity\n  const updateProductQuantity = (productId, change) => {\n    setProductQuantities(prev => ({\n      ...prev,\n      [productId]: Math.max(0, (prev[productId] || 0) + change)\n    }));\n  };\n\n  // Function to add product to cart\n  const addToCart = product => {\n    const quantity = productQuantities[product.id] || 0;\n    if (quantity === 0) {\n      alert(\"Please select a quantity greater than 0\");\n      return;\n    }\n    setCart(prevCart => {\n      const existingProductIndex = prevCart.findIndex(item => item.id === product.id);\n      let updatedCart;\n      if (existingProductIndex > -1) {\n        updatedCart = [...prevCart];\n        updatedCart[existingProductIndex] = {\n          ...updatedCart[existingProductIndex],\n          quantity: quantity\n        };\n      } else {\n        updatedCart = [...prevCart, {\n          ...product,\n          quantity,\n          displayPrice: getDisplayPrice(product)\n        }];\n      }\n\n      // Save to localStorage immediately\n      localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(updatedCart));\n\n      // Dispatch storage event to notify other components\n      window.dispatchEvent(new Event('storage'));\n      console.log(\"Updated Cart in Products.js:\", updatedCart);\n      return updatedCart;\n    });\n    setProductQuantities(prev => ({\n      ...prev,\n      [product.id]: 0\n    }));\n  };\n\n  // Filter products based on the search term\n  const filteredProducts = (Array.isArray(products) ? products : []).filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headline-left\",\n          children: \"See our products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headline-right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search products...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"search-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/Images/search_icon.png\",\n                alt: \"Search Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), \"Search\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-summary\",\n              children: [\"Cart: \", cart.reduce((total, item) => total + item.quantity, 0), \" items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: filteredProducts.length > 0 ? filteredProducts.map(product => {\n        // Get current quantity for this product\n        const currentQuantity = productQuantities[product.id] || 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name,\n            className: \"product-image\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = \"/Images/placeholder.png\";\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"product-name\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-category\",\n            children: [\"Category: \", product.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-price\",\n            children: [\"Price: \\u20B9\", getDisplayPrice(product)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), canAddToCart() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-cart-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"quantity-btn\",\n                onClick: () => updateProductQuantity(product.id, -1),\n                disabled: currentQuantity === 0,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quantity-display\",\n                children: currentQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"quantity-btn\",\n                onClick: () => updateProductQuantity(product.id, 1),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-to-cart-btn\",\n              onClick: () => addToCart(product),\n              disabled: currentQuantity === 0,\n              children: \"ADD TO CART\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Products, \"f0VoE5mb7goM3aZHnKe1zIn8cWM=\", false, function () {\n  return [useAuth];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","CART_STORAGE_KEY","Products","_s","products","setProducts","searchTerm","setSearchTerm","cart","setCart","savedCart","localStorage","getItem","JSON","parse","error","console","isAuthenticated","userType","currentCart","stringify","setItem","log","window","dispatchEvent","Event","fetch","headers","then","response","ok","Error","status","json","data","productList","Array","isArray","catch","getDisplayPrice","product","retail_price","wholesale_price","normal_price","canAddToCart","productQuantities","setProductQuantities","updateProductQuantity","productId","change","prev","Math","max","addToCart","quantity","id","alert","prevCart","existingProductIndex","findIndex","item","updatedCart","displayPrice","filteredProducts","filter","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","src","alt","reduce","total","length","map","currentQuantity","image","onError","onerror","category","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Apple_Mate(project)/Frontend/applemate/src/pages/Products_page/Products.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../AuthenticationContext\";\r\nimport \"./products.css\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\n// Use a consistent variable for the localStorage key\r\nconst CART_STORAGE_KEY = 'cart';\r\n\r\nfunction Products() {\r\n  const [products, setProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [cart, setCart] = useState(() => {\r\n    // Initialize cart from localStorage\r\n    const savedCart = localStorage.getItem(CART_STORAGE_KEY);\r\n    try {\r\n      return savedCart ? JSON.parse(savedCart) : [];\r\n    } catch (error) {\r\n      console.error(\"Error parsing cart data:\", error);\r\n      return [];\r\n    }\r\n  });\r\n  const { isAuthenticated, userType } = useAuth();\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    const currentCart = JSON.stringify(cart);\r\n    localStorage.setItem(CART_STORAGE_KEY, currentCart);\r\n    console.log(\"Cart saved to localStorage in Products.js:\", currentCart);\r\n    \r\n    // Dispatch storage event to notify other components\r\n    window.dispatchEvent(new Event('storage'));\r\n  }, [cart]);\r\n\r\n  // Fetch products from the Django backend\r\n  useEffect(() => {\r\n    fetch(\"/api/products/\", {\r\n      headers: {\r\n        'Authorization': isAuthenticated ? `Token ${localStorage.getItem('authToken')}` : '',\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const productList = Array.isArray(data) ? data : (data.products || []);\r\n        setProducts(productList);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching products:\", error));\r\n  }, [isAuthenticated]);\r\n\r\n  // Function to get the correct price based on user type\r\n  const getDisplayPrice = (product) => {\r\n    if (isAuthenticated && (userType === \"retail_seller\" || userType === \"retail\") && product.retail_price) {\r\n      return product.retail_price;\r\n    }\r\n\r\n    if (isAuthenticated && (userType === \"wholesale_dealer\" || userType === \"wholesale\") && product.wholesale_price) {\r\n      return product.wholesale_price;\r\n    }\r\n\r\n    return product.normal_price;\r\n  };\r\n\r\n  // Function to check if user can add to cart\r\n  const canAddToCart = () => {\r\n    return isAuthenticated &&\r\n      (userType === \"retail_seller\" ||\r\n        userType === \"retail\" ||\r\n        userType === \"wholesale_dealer\" ||\r\n        userType === \"wholesale\");\r\n  };\r\n\r\n  // State to track current product quantities\r\n  const [productQuantities, setProductQuantities] = useState({});\r\n\r\n  // Function to update product quantity\r\n  const updateProductQuantity = (productId, change) => {\r\n    setProductQuantities(prev => ({\r\n      ...prev,\r\n      [productId]: Math.max(0, (prev[productId] || 0) + change)\r\n    }));\r\n  };\r\n\r\n  // Function to add product to cart\r\n  const addToCart = (product) => {\r\n    const quantity = productQuantities[product.id] || 0;\r\n    if (quantity === 0) {\r\n      alert(\"Please select a quantity greater than 0\");\r\n      return;\r\n    }\r\n\r\n    setCart((prevCart) => {\r\n      const existingProductIndex = prevCart.findIndex((item) => item.id === product.id);\r\n      let updatedCart;\r\n\r\n      if (existingProductIndex > -1) {\r\n        updatedCart = [...prevCart];\r\n        updatedCart[existingProductIndex] = {\r\n          ...updatedCart[existingProductIndex],\r\n          quantity: quantity,\r\n        };\r\n      } else {\r\n        updatedCart = [...prevCart, {\r\n          ...product,\r\n          quantity,\r\n          displayPrice: getDisplayPrice(product)\r\n        }];\r\n      }\r\n\r\n      // Save to localStorage immediately\r\n      localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(updatedCart));\r\n      \r\n      // Dispatch storage event to notify other components\r\n      window.dispatchEvent(new Event('storage'));\r\n      \r\n      console.log(\"Updated Cart in Products.js:\", updatedCart);\r\n      return updatedCart;\r\n    });\r\n\r\n    setProductQuantities((prev) => ({ ...prev, [product.id]: 0 }));\r\n  };\r\n\r\n  // Filter products based on the search term\r\n  const filteredProducts = (Array.isArray(products) ? products : []).filter((product) =>\r\n    product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n      <div>\r\n        <div className=\"headline\">\r\n          <div className=\"headline-left\">See our products</div>\r\n          <div className=\"headline-right\">\r\n            <div className=\"right-items\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search products...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n              <button className=\"search-btn\">\r\n                <img src=\"/Images/search_icon.png\" alt=\"Search Icon\" />\r\n                Search\r\n              </button>\r\n              {/* Cart Summary */}\r\n              <div className=\"cart-summary\">\r\n                Cart: {cart.reduce((total, item) => total + item.quantity, 0)} items\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Product List Section */}\r\n      <div className=\"product-grid\">\r\n        {filteredProducts.length > 0 ? (\r\n          filteredProducts.map((product) => {\r\n            // Get current quantity for this product\r\n            const currentQuantity = productQuantities[product.id] || 0;\r\n\r\n            return (\r\n              <div key={product.id} className=\"product-card\">\r\n                <img\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  className=\"product-image\"\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src = \"/Images/placeholder.png\";\r\n                  }}\r\n                />\r\n                <h2 className=\"product-name\">{product.name}</h2>\r\n                <p className=\"product-category\">Category: {product.category}</p>\r\n                <p className=\"product-price\">\r\n                  Price: ₹{getDisplayPrice(product)}\r\n                </p>\r\n\r\n                {/* Conditional rendering for Add to Cart */}\r\n                {canAddToCart() && (\r\n                  <div className=\"product-cart-actions\">\r\n                    <div className=\"quantity-control\">\r\n                      <button\r\n                        className=\"quantity-btn\"\r\n                        onClick={() => updateProductQuantity(product.id, -1)}\r\n                        disabled={currentQuantity === 0}\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <span className=\"quantity-display\">{currentQuantity}</span>\r\n                      <button\r\n                        className=\"quantity-btn\"\r\n                        onClick={() => updateProductQuantity(product.id, 1)}\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <button\r\n                      className=\"add-to-cart-btn\"\r\n                      onClick={() => addToCart(product)}\r\n                      disabled={currentQuantity === 0}\r\n                    >\r\n                      ADD TO CART\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No products found.</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Products;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}