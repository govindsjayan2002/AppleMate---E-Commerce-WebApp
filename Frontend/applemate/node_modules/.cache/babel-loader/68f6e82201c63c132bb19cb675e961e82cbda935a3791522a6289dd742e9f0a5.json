{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userType, setUserType] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const login = (token, role, username) => {\n    try {\n      console.log('Login Called - Role:', role);\n\n      // More comprehensive user type mapping\n      const userTypeMap = {\n        'user': 'retail_seller',\n        'retail_seller': 'retail_seller',\n        'wholesale': 'wholesale',\n        'wholesale_dealer': 'wholesale',\n        'admin': 'admin'\n      };\n\n      // Determine user type, with a fallback to 'retail_seller'\n      const userType = userTypeMap[role] || 'retail_seller';\n      console.log('Mapped User Type:', userType);\n\n      // Set all necessary local storage items\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('role', role);\n      localStorage.setItem('userType', userType);\n\n      // Update state\n      setUserType(userType);\n      setIsAuthenticated(true);\n\n      // Routing logic\n      switch (userType) {\n        case 'admin':\n          window.location.href = '/admin/dashboard';\n          break;\n        case 'wholesale':\n          console.log('Routing to Wholesale Profile');\n          window.location.href = '/Ws_profile';\n          break;\n        case 'retail_seller':\n        default:\n          console.log('Routing to Retail Profile');\n          window.location.href = '/profile';\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  // Rest of the code remains the same...\n};\n_s(AuthProvider, \"qe+uHUc9637RMYUJqi8L3wYxKKw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userType","setUserType","loading","setLoading","login","token","role","username","console","log","userTypeMap","localStorage","setItem","window","location","href","error","_c","$RefreshReg$"],"sources":["E:/Apple_Mate(project)/Frontend/applemate/src/AuthenticationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userType, setUserType] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const login = (token, role, username) => {\r\n    try {\r\n      console.log('Login Called - Role:', role);\r\n\r\n      // More comprehensive user type mapping\r\n      const userTypeMap = {\r\n        'user': 'retail_seller',\r\n        'retail_seller': 'retail_seller',\r\n        'wholesale': 'wholesale',\r\n        'wholesale_dealer': 'wholesale',\r\n        'admin': 'admin'\r\n      };\r\n\r\n      // Determine user type, with a fallback to 'retail_seller'\r\n      const userType = userTypeMap[role] || 'retail_seller';\r\n\r\n      console.log('Mapped User Type:', userType);\r\n\r\n      // Set all necessary local storage items\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('role', role);\r\n      localStorage.setItem('userType', userType);\r\n\r\n      // Update state\r\n      setUserType(userType);\r\n      setIsAuthenticated(true);\r\n\r\n      // Routing logic\r\n      switch(userType) {\r\n        case 'admin':\r\n          window.location.href = '/admin/dashboard';\r\n          break;\r\n        case 'wholesale':\r\n          console.log('Routing to Wholesale Profile');\r\n          window.location.href = '/Ws_profile';\r\n          break;\r\n        case 'retail_seller':\r\n        default:\r\n          console.log('Routing to Retail Profile');\r\n          window.location.href = '/profile';\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n    }\r\n  };\r\n\r\n  // Rest of the code remains the same...\r\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAE7E,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,KAAK,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,CAAC;;MAEzC;MACA,MAAMI,WAAW,GAAG;QAClB,MAAM,EAAE,eAAe;QACvB,eAAe,EAAE,eAAe;QAChC,WAAW,EAAE,WAAW;QACxB,kBAAkB,EAAE,WAAW;QAC/B,OAAO,EAAE;MACX,CAAC;;MAED;MACA,MAAMV,QAAQ,GAAGU,WAAW,CAACJ,IAAI,CAAC,IAAI,eAAe;MAErDE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAET,QAAQ,CAAC;;MAE1C;MACAW,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEP,KAAK,CAAC;MACxCM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAAC;MAC1CI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAAC;MAClCK,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEZ,QAAQ,CAAC;;MAE1C;MACAC,WAAW,CAACD,QAAQ,CAAC;MACrBD,kBAAkB,CAAC,IAAI,CAAC;;MAExB;MACA,QAAOC,QAAQ;QACb,KAAK,OAAO;UACVa,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,kBAAkB;UACzC;QACF,KAAK,WAAW;UACdP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;UAC3CI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAa;UACpC;QACF,KAAK,eAAe;QACpB;UACEP,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;UACxCI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;MACrC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;;EAED;AACF,CAAC;AAACnB,EAAA,CArDWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}